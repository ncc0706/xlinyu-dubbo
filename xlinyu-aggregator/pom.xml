<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.xlinyu</groupId>
    <artifactId>xlinyu-aggregator</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>../xlinyu-web</module>
        <module>../xlinyu-service-provider</module>
        <module>../xlinyu-service-consumer</module>
    </modules>
    <packaging>pom</packaging>

    <distributionManagement>
        <site>
            <id>website</id>
            <url>scp://webhost.company.com/www/website</url>
        </site>
    </distributionManagement>
    <properties>

        <junit.version>4.12</junit.version>

        <java.version>1.7</java.version>

        <!-- web jar -->
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
        <jsp-api.version>2.3.1</jsp-api.version>


        <!--spring version-->
        <spring.version>4.2.3.RELEASE</spring.version>

        <!-- log4j 日志 -->
        <log4j.version>1.2.16</log4j.version>
        <slf4j-log4j12>1.6.0</slf4j-log4j12>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>

        <dependencies>


            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- web start -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>javax.servlet.jsp-api</artifactId>
                <version>${jsp-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.glassfish.web</groupId>
                <artifactId>jstl-impl</artifactId>
                <version>1.2</version>
                <exclusions>
                    <exclusion>
                        <artifactId>servlet-api</artifactId>
                        <groupId>javax.servlet</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jsp-api</artifactId>
                        <groupId>javax.servlet.jsp</groupId>
                    </exclusion>

                </exclusions>
            </dependency>
            <!-- web end -->

            <!-- spring start -->
            <!-- Core utilities used by other modules. Define this if you use Spring
                Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
                <exclusions>
                    <!-- Exclude Commons Logging in favor of SLF4j -->
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Expression Language (depends on spring-core) Define this if you use
                Spring Expression APIs (org.springframework.expression.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define
                this if you use Spring Bean APIs (org.springframework.beans.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core,
                spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Application Context (depends on spring-core, spring-expression, spring-aop,
                spring-beans) This is the central artifact for Spring's Dependency Injection
                Container and is generally always defined -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Various Application Context utilities, including EhCache, JavaMail,
                Quartz, and Freemarker integration Define this if you need any of these integrations -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Transaction Management Abstraction (depends on spring-core, spring-beans,
                spring-aop, spring-context) Define this if you use Spring Transactions or
                DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context,
                spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA,
                and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx)
                Define this if you need ORM (org.springframework.orm.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB,
                JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans,
                spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-oxm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Web application development utilities applicable to both Servlet and
                Portlet Environments (depends on spring-core, spring-beans, spring-context)
                Define this if you use Spring MVC, or wish to use Struts, JSF, or another
                web framework with Spring (org.springframework.web.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans,
                spring-context, spring-web) Define this if you use Spring MVC with a Servlet
                Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- spring end -->


            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>dubbo</artifactId>
                <version>2.5.3</version>
            </dependency>

            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>3.4.6</version>
            </dependency>

            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>0.3</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.zookeeper</groupId>
                        <artifactId>zookeeper</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>


            <!-- log4j start -->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j-log4j12}</version>
            </dependency>
            <!-- log4j end -->

            <!--dubbo service den-->
            <dependency>
                <groupId>com.xlinyu</groupId>
                <artifactId>xlinyu-service-provider</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>


        </dependencies>
    </dependencyManagement>

    <build>
        <!-- 插件管理 -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <!-- 设置JDK 版本 -->
                        <!-- 源码版本 -->
                        <source>${java.version}</source>
                        <!-- 目标版本 -->
                        <target>${java.version}</target>
                        <!-- 设置 编译编码 -->
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>